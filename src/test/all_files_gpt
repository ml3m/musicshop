package com.musicshop.models;

import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

class AlbumTest {

    @Test
    void testAlbumCreation() {
        Album album = new Album("Thriller", 15.0, "Michael Jackson", 1982, "album");
        assertEquals("Thriller", album.getName());
        assertEquals(15.0, album.getPrice());
        assertEquals("Michael Jackson", album.getArtist());
        assertEquals(1982, album.getYear());
        assertEquals("album", album.getType());
    }

    /*
    @Test
    void testAlbumToString() {
        Album album = new Album("Abbey Road", 20.0, "The Beatles", 1969);
        String expected = "Name: Abbey Road, Price: $20.0, Artist: The Beatles, Year: 1969";
        assertEquals(expected, album.toString());
    }
     */
}
package com.musicshop.models;

import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

class InstrumentTest {

    @Test
    void testInstrumentCreation() {
        Instrument instrument = new Instrument("Guitar", 150.0, "String");
        assertEquals("Guitar", instrument.getName());
        assertEquals(150.0, instrument.getPrice());
    }

    @Test
    void testInstrumentToString() {
        Instrument instrument = new Instrument("Piano", 1000.0, "Percussion");
        String expected = "Name: Piano, Price: $1000.0, Type: Percussion";
        assertEquals(expected, instrument.toString());
    }
}
package com.musicshop.services;

import com.musicshop.models.Album;
import com.musicshop.models.Instrument;
import com.musicshop.models.MusicItem;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;

import java.util.List;

import static org.junit.jupiter.api.Assertions.*;

class InventoryServiceImplTest {
    private InventoryServiceImpl inventoryService;

    @BeforeEach
    void setUp() {
        inventoryService = new InventoryServiceImpl();
    }

    @Test
    void testAddItem() {
        MusicItem guitar = new Instrument("Guitar", 150.0, "String");
        inventoryService.addItem(guitar);

        List<MusicItem> items = inventoryService.getItems();
        assertEquals(1, items.size());
        assertEquals("Guitar", items.get(0).getName());
    }

    @Test
    void testRemoveItem() {
        MusicItem piano = new Instrument("Piano", 1000.0, "Percussion");
        inventoryService.addItem(piano);
        inventoryService.removeItem("Piano");

        List<MusicItem> items = inventoryService.getItems();
        assertTrue(items.isEmpty());
    }

    @Test
    void testGetItems() {
        inventoryService.addItem(new Album("Thriller", 15.0, "Michael Jackson", 1982));
        inventoryService.addItem(new Instrument("Drums", 200.0, "Percussion"));

        List<MusicItem> items = inventoryService.getItems();
        assertEquals(2, items.size());
    }
}
package com.musicshop.services;

import com.musicshop.models.Album;
import com.musicshop.models.Instrument;
import com.musicshop.models.MusicItem;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;

import java.io.File;
import java.util.ArrayList;
import java.util.List;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertTrue;

class FileStorageServiceTest {
    private FileStorageService fileStorageService;
    private InventoryServiceImpl inventoryService;
    private static final String TEST_FILE_PATH = "test_inventory.json";

    @BeforeEach
    void setUp() {
        fileStorageService = new FileStorageService();
        inventoryService = new InventoryServiceImpl();
    }

    @Test
    void testSaveAndLoadItems() {
        List<MusicItem> items = new ArrayList<>();
        items.add(new Album("Test Album", 10.0, "Test Artist", 2021));
        items.add(new Instrument("Violin", 120.0, "String"));

        // Save to file
        fileStorageService.saveItems(items);

        // Load from file
        inventoryService.clearItems();
        fileStorageService.loadItems(inventoryService);
        List<MusicItem> loadedItems = inventoryService.getItems();

        assertEquals(2, loadedItems.size());
        assertEquals("Test Album", loadedItems.get(0).getName());
        assertEquals("Violin", loadedItems.get(1).getName());

        // Clean up test file
        new File(TEST_FILE_PATH).delete();
    }
}
package com.musicshop.services;

import com.musicshop.exceptions.InvalidItemException;
import com.musicshop.models.Album;
import com.musicshop.models.MusicItem;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;

import java.util.List;

import static org.junit.jupiter.api.Assertions.*;

class MusicServiceImplTest {
    private InventoryServiceImpl inventoryService;
    private MusicServiceImpl musicService;

    @BeforeEach
    void setUp() {
        inventoryService = new InventoryServiceImpl();
        musicService = new MusicServiceImpl(inventoryService);
    }

    @Test
    void testAddItem() throws InvalidItemException {
        MusicItem album = new Album("Back in Black", 15.0, "AC/DC", 1980);
        musicService.addItem(album);

        List<MusicItem> items = inventoryService.getItems();
        assertEquals(1, items.size());
        assertEquals("Back in Black", items.get(0).getName());
    }

    @Test
    void testRemoveItem() throws InvalidItemException {
        MusicItem album = new Album("Greatest Hits", 10.0, "Queen", 1981);
        musicService.addItem(album);

        musicService.removeItem("Greatest Hits");
        List<MusicItem> items = inventoryService.getItems();
        assertTrue(items.isEmpty());
    }

    @Test
    void testRemoveNonexistentItem() {
        assertThrows(InvalidItemException.class, () -> musicService.removeItem("Nonexistent"));
    }
}
